/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.writer.sdk.models.operations;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.core.type.TypeReference;
import com.writer.sdk.utils.SpeakeasyMetadata;
import com.writer.sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;
import java.util.Optional;


public class CreateModelCustomizationRequest {

    @SpeakeasyMetadata("request:mediaType=application/json")
    private com.writer.sdk.models.shared.CreateCustomizationRequest createCustomizationRequest;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=modelId")
    private String modelId;

    @SpeakeasyMetadata("pathParam:style=simple,explode=false,name=organizationId")
    private Optional<? extends Long> organizationId;

    @JsonCreator
    public CreateModelCustomizationRequest(
            com.writer.sdk.models.shared.CreateCustomizationRequest createCustomizationRequest,
            String modelId,
            Optional<? extends Long> organizationId) {
        Utils.checkNotNull(createCustomizationRequest, "createCustomizationRequest");
        Utils.checkNotNull(modelId, "modelId");
        Utils.checkNotNull(organizationId, "organizationId");
        this.createCustomizationRequest = createCustomizationRequest;
        this.modelId = modelId;
        this.organizationId = organizationId;
    }
    
    public CreateModelCustomizationRequest(
            com.writer.sdk.models.shared.CreateCustomizationRequest createCustomizationRequest,
            String modelId) {
        this(createCustomizationRequest, modelId, Optional.empty());
    }

    @JsonIgnore
    public com.writer.sdk.models.shared.CreateCustomizationRequest createCustomizationRequest() {
        return createCustomizationRequest;
    }

    @JsonIgnore
    public String modelId() {
        return modelId;
    }

    @JsonIgnore
    public Optional<? extends Long> organizationId() {
        return organizationId;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public CreateModelCustomizationRequest withCreateCustomizationRequest(com.writer.sdk.models.shared.CreateCustomizationRequest createCustomizationRequest) {
        Utils.checkNotNull(createCustomizationRequest, "createCustomizationRequest");
        this.createCustomizationRequest = createCustomizationRequest;
        return this;
    }

    public CreateModelCustomizationRequest withModelId(String modelId) {
        Utils.checkNotNull(modelId, "modelId");
        this.modelId = modelId;
        return this;
    }

    public CreateModelCustomizationRequest withOrganizationId(long organizationId) {
        Utils.checkNotNull(organizationId, "organizationId");
        this.organizationId = Optional.ofNullable(organizationId);
        return this;
    }

    public CreateModelCustomizationRequest withOrganizationId(Optional<? extends Long> organizationId) {
        Utils.checkNotNull(organizationId, "organizationId");
        this.organizationId = organizationId;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        CreateModelCustomizationRequest other = (CreateModelCustomizationRequest) o;
        return 
            java.util.Objects.deepEquals(this.createCustomizationRequest, other.createCustomizationRequest) &&
            java.util.Objects.deepEquals(this.modelId, other.modelId) &&
            java.util.Objects.deepEquals(this.organizationId, other.organizationId);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            createCustomizationRequest,
            modelId,
            organizationId);
    }
    
    @Override
    public String toString() {
        return Utils.toString(CreateModelCustomizationRequest.class,
                "createCustomizationRequest", createCustomizationRequest,
                "modelId", modelId,
                "organizationId", organizationId);
    }
    
    public final static class Builder {
 
        private com.writer.sdk.models.shared.CreateCustomizationRequest createCustomizationRequest;
 
        private String modelId;
 
        private Optional<? extends Long> organizationId = Optional.empty();  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder createCustomizationRequest(com.writer.sdk.models.shared.CreateCustomizationRequest createCustomizationRequest) {
            Utils.checkNotNull(createCustomizationRequest, "createCustomizationRequest");
            this.createCustomizationRequest = createCustomizationRequest;
            return this;
        }

        public Builder modelId(String modelId) {
            Utils.checkNotNull(modelId, "modelId");
            this.modelId = modelId;
            return this;
        }

        public Builder organizationId(long organizationId) {
            Utils.checkNotNull(organizationId, "organizationId");
            this.organizationId = Optional.ofNullable(organizationId);
            return this;
        }

        public Builder organizationId(Optional<? extends Long> organizationId) {
            Utils.checkNotNull(organizationId, "organizationId");
            this.organizationId = organizationId;
            return this;
        }
        
        public CreateModelCustomizationRequest build() {
            return new CreateModelCustomizationRequest(
                createCustomizationRequest,
                modelId,
                organizationId);
        }
    }
}

