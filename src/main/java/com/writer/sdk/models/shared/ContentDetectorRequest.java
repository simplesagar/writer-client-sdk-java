/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.writer.sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.writer.sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class ContentDetectorRequest {

    @JsonProperty("input")
    private String input;

    @JsonCreator
    public ContentDetectorRequest(
            @JsonProperty("input") String input) {
        Utils.checkNotNull(input, "input");
        this.input = input;
    }

    @JsonIgnore
    public String input() {
        return input;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ContentDetectorRequest withInput(String input) {
        Utils.checkNotNull(input, "input");
        this.input = input;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ContentDetectorRequest other = (ContentDetectorRequest) o;
        return 
            java.util.Objects.deepEquals(this.input, other.input);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            input);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ContentDetectorRequest.class,
                "input", input);
    }
    
    public final static class Builder {
 
        private String input;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder input(String input) {
            Utils.checkNotNull(input, "input");
            this.input = input;
            return this;
        }
        
        public ContentDetectorRequest build() {
            return new ContentDetectorRequest(
                input);
        }
    }
}

