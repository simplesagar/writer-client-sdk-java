/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.writer.sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.writer.sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class ContentDetectorResponse {

    @JsonProperty("label")
    private Label label;

    @JsonProperty("score")
    private double score;

    @JsonCreator
    public ContentDetectorResponse(
            @JsonProperty("label") Label label,
            @JsonProperty("score") double score) {
        Utils.checkNotNull(label, "label");
        Utils.checkNotNull(score, "score");
        this.label = label;
        this.score = score;
    }

    @JsonIgnore
    public Label label() {
        return label;
    }

    @JsonIgnore
    public double score() {
        return score;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public ContentDetectorResponse withLabel(Label label) {
        Utils.checkNotNull(label, "label");
        this.label = label;
        return this;
    }

    public ContentDetectorResponse withScore(double score) {
        Utils.checkNotNull(score, "score");
        this.score = score;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        ContentDetectorResponse other = (ContentDetectorResponse) o;
        return 
            java.util.Objects.deepEquals(this.label, other.label) &&
            java.util.Objects.deepEquals(this.score, other.score);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            label,
            score);
    }
    
    @Override
    public String toString() {
        return Utils.toString(ContentDetectorResponse.class,
                "label", label,
                "score", score);
    }
    
    public final static class Builder {
 
        private Label label;
 
        private Double score;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder label(Label label) {
            Utils.checkNotNull(label, "label");
            this.label = label;
            return this;
        }

        public Builder score(double score) {
            Utils.checkNotNull(score, "score");
            this.score = score;
            return this;
        }
        
        public ContentDetectorResponse build() {
            return new ContentDetectorResponse(
                label,
                score);
        }
    }
}

