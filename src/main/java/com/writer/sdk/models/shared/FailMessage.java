/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.writer.sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.writer.sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class FailMessage {

    @JsonProperty("description")
    private String description;

    @JsonProperty("extras")
    private java.lang.Object extras;

    @JsonProperty("key")
    private String key;

    @JsonCreator
    public FailMessage(
            @JsonProperty("description") String description,
            @JsonProperty("extras") java.lang.Object extras,
            @JsonProperty("key") String key) {
        Utils.checkNotNull(description, "description");
        Utils.checkNotNull(extras, "extras");
        Utils.checkNotNull(key, "key");
        this.description = description;
        this.extras = extras;
        this.key = key;
    }

    @JsonIgnore
    public String description() {
        return description;
    }

    @JsonIgnore
    public java.lang.Object extras() {
        return extras;
    }

    @JsonIgnore
    public String key() {
        return key;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public FailMessage withDescription(String description) {
        Utils.checkNotNull(description, "description");
        this.description = description;
        return this;
    }

    public FailMessage withExtras(java.lang.Object extras) {
        Utils.checkNotNull(extras, "extras");
        this.extras = extras;
        return this;
    }

    public FailMessage withKey(String key) {
        Utils.checkNotNull(key, "key");
        this.key = key;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        FailMessage other = (FailMessage) o;
        return 
            java.util.Objects.deepEquals(this.description, other.description) &&
            java.util.Objects.deepEquals(this.extras, other.extras) &&
            java.util.Objects.deepEquals(this.key, other.key);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            description,
            extras,
            key);
    }
    
    @Override
    public String toString() {
        return Utils.toString(FailMessage.class,
                "description", description,
                "extras", extras,
                "key", key);
    }
    
    public final static class Builder {
 
        private String description;
 
        private java.lang.Object extras;
 
        private String key;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder description(String description) {
            Utils.checkNotNull(description, "description");
            this.description = description;
            return this;
        }

        public Builder extras(java.lang.Object extras) {
            Utils.checkNotNull(extras, "extras");
            this.extras = extras;
            return this;
        }

        public Builder key(String key) {
            Utils.checkNotNull(key, "key");
            this.key = key;
            return this;
        }
        
        public FailMessage build() {
            return new FailMessage(
                description,
                extras,
                key);
        }
    }
}

