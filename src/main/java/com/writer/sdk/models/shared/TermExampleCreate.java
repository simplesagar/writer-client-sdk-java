/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package com.writer.sdk.models.shared;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonFormat;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.type.TypeReference;
import com.writer.sdk.utils.Utils;
import java.io.InputStream;
import java.lang.Deprecated;
import java.math.BigDecimal;
import java.math.BigInteger;


public class TermExampleCreate {

    @JsonProperty("example")
    private String example;

    @JsonProperty("type")
    private TermExampleCreateType type;

    @JsonCreator
    public TermExampleCreate(
            @JsonProperty("example") String example,
            @JsonProperty("type") TermExampleCreateType type) {
        Utils.checkNotNull(example, "example");
        Utils.checkNotNull(type, "type");
        this.example = example;
        this.type = type;
    }

    @JsonIgnore
    public String example() {
        return example;
    }

    @JsonIgnore
    public TermExampleCreateType type() {
        return type;
    }

    public final static Builder builder() {
        return new Builder();
    }

    public TermExampleCreate withExample(String example) {
        Utils.checkNotNull(example, "example");
        this.example = example;
        return this;
    }

    public TermExampleCreate withType(TermExampleCreateType type) {
        Utils.checkNotNull(type, "type");
        this.type = type;
        return this;
    }
    
    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        TermExampleCreate other = (TermExampleCreate) o;
        return 
            java.util.Objects.deepEquals(this.example, other.example) &&
            java.util.Objects.deepEquals(this.type, other.type);
    }
    
    @Override
    public int hashCode() {
        return java.util.Objects.hash(
            example,
            type);
    }
    
    @Override
    public String toString() {
        return Utils.toString(TermExampleCreate.class,
                "example", example,
                "type", type);
    }
    
    public final static class Builder {
 
        private String example;
 
        private TermExampleCreateType type;  
        
        private Builder() {
          // force use of static builder() method
        }

        public Builder example(String example) {
            Utils.checkNotNull(example, "example");
            this.example = example;
            return this;
        }

        public Builder type(TermExampleCreateType type) {
            Utils.checkNotNull(type, "type");
            this.type = type;
            return this;
        }
        
        public TermExampleCreate build() {
            return new TermExampleCreate(
                example,
                type);
        }
    }
}

